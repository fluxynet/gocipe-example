// Code generated by protoc-gen-go. DO NOT EDIT.
// source: entities.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Citizen A human being belonging to a country
type Citizen struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Surname              string               `protobuf:"bytes,2,opt,name=Surname" json:"Surname,omitempty"`
	OtherNames           string               `protobuf:"bytes,3,opt,name=OtherNames" json:"OtherNames,omitempty"`
	Gender               string               `protobuf:"bytes,4,opt,name=Gender" json:"Gender,omitempty"`
	DOB                  *timestamp.Timestamp `protobuf:"bytes,5,opt,name=DOB" json:"DOB,omitempty"`
	Country              *Country             `protobuf:"bytes,6,opt,name=Country" json:"Country,omitempty"`
	CountryID            string               `protobuf:"bytes,7,opt,name=CountryID" json:"CountryID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Citizen) Reset()         { *m = Citizen{} }
func (m *Citizen) String() string { return proto.CompactTextString(m) }
func (*Citizen) ProtoMessage()    {}
func (*Citizen) Descriptor() ([]byte, []int) {
	return fileDescriptor_entities_d1ae642d36bdb6e9, []int{0}
}
func (m *Citizen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Citizen.Unmarshal(m, b)
}
func (m *Citizen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Citizen.Marshal(b, m, deterministic)
}
func (dst *Citizen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Citizen.Merge(dst, src)
}
func (m *Citizen) XXX_Size() int {
	return xxx_messageInfo_Citizen.Size(m)
}
func (m *Citizen) XXX_DiscardUnknown() {
	xxx_messageInfo_Citizen.DiscardUnknown(m)
}

var xxx_messageInfo_Citizen proto.InternalMessageInfo

func (m *Citizen) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Citizen) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *Citizen) GetOtherNames() string {
	if m != nil {
		return m.OtherNames
	}
	return ""
}

func (m *Citizen) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Citizen) GetDOB() *timestamp.Timestamp {
	if m != nil {
		return m.DOB
	}
	return nil
}

func (m *Citizen) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Citizen) GetCountryID() string {
	if m != nil {
		return m.CountryID
	}
	return ""
}

// Tag Tags can be used to categories countries
type Tag struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Countries            []string `protobuf:"bytes,3,rep,name=Countries" json:"Countries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_entities_d1ae642d36bdb6e9, []int{1}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetCountries() []string {
	if m != nil {
		return m.Countries
	}
	return nil
}

// Country A country
type Country struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Continent            string   `protobuf:"bytes,3,opt,name=Continent" json:"Continent,omitempty"`
	Capital              *Capital `protobuf:"bytes,4,opt,name=Capital" json:"Capital,omitempty"`
	Citizen              []string `protobuf:"bytes,5,rep,name=Citizen" json:"Citizen,omitempty"`
	Tags                 []*Tag   `protobuf:"bytes,6,rep,name=Tags" json:"Tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_entities_d1ae642d36bdb6e9, []int{2}
}
func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (dst *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(dst, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Country) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Country) GetContinent() string {
	if m != nil {
		return m.Continent
	}
	return ""
}

func (m *Country) GetCapital() *Capital {
	if m != nil {
		return m.Capital
	}
	return nil
}

func (m *Country) GetCitizen() []string {
	if m != nil {
		return m.Citizen
	}
	return nil
}

func (m *Country) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Capital Capital city of a country
type Capital struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Capital              string   `protobuf:"bytes,2,opt,name=Capital" json:"Capital,omitempty"`
	Country              string   `protobuf:"bytes,3,opt,name=Country" json:"Country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Capital) Reset()         { *m = Capital{} }
func (m *Capital) String() string { return proto.CompactTextString(m) }
func (*Capital) ProtoMessage()    {}
func (*Capital) Descriptor() ([]byte, []int) {
	return fileDescriptor_entities_d1ae642d36bdb6e9, []int{3}
}
func (m *Capital) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Capital.Unmarshal(m, b)
}
func (m *Capital) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Capital.Marshal(b, m, deterministic)
}
func (dst *Capital) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Capital.Merge(dst, src)
}
func (m *Capital) XXX_Size() int {
	return xxx_messageInfo_Capital.Size(m)
}
func (m *Capital) XXX_DiscardUnknown() {
	xxx_messageInfo_Capital.DiscardUnknown(m)
}

var xxx_messageInfo_Capital proto.InternalMessageInfo

func (m *Capital) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Capital) GetCapital() string {
	if m != nil {
		return m.Capital
	}
	return ""
}

func (m *Capital) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func init() {
	proto.RegisterType((*Citizen)(nil), "models.Citizen")
	proto.RegisterType((*Tag)(nil), "models.Tag")
	proto.RegisterType((*Country)(nil), "models.Country")
	proto.RegisterType((*Capital)(nil), "models.Capital")
}

func init() { proto.RegisterFile("entities.proto", fileDescriptor_entities_d1ae642d36bdb6e9) }

var fileDescriptor_entities_d1ae642d36bdb6e9 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xc1, 0x6a, 0xc2, 0x40,
	0x10, 0x25, 0x46, 0x13, 0x1c, 0xc1, 0xc2, 0x1e, 0xca, 0x22, 0xa5, 0x4a, 0x4e, 0x16, 0x4a, 0x04,
	0xfb, 0x07, 0x35, 0x20, 0x1e, 0xaa, 0x90, 0xe6, 0x07, 0x56, 0x9c, 0xa6, 0x0b, 0x66, 0x57, 0xb2,
	0xeb, 0xa1, 0xfd, 0xab, 0xfe, 0x52, 0xbf, 0xa4, 0x38, 0xd9, 0x35, 0x81, 0xf6, 0xd0, 0xdb, 0xce,
	0x7b, 0xb3, 0x33, 0xef, 0xcd, 0x83, 0x31, 0x2a, 0x2b, 0xad, 0x44, 0x93, 0x9e, 0x6a, 0x6d, 0x35,
	0x8b, 0x2a, 0x7d, 0xc0, 0xa3, 0x99, 0x4c, 0x4b, 0xad, 0xcb, 0x23, 0x2e, 0x08, 0xdd, 0x9f, 0xdf,
	0x16, 0x56, 0x56, 0x68, 0xac, 0xa8, 0x4e, 0x4d, 0x63, 0xf2, 0x1d, 0x40, 0xbc, 0x92, 0x56, 0x7e,
	0xa2, 0x62, 0x63, 0xe8, 0x6d, 0x32, 0x1e, 0xcc, 0x82, 0xf9, 0x30, 0xef, 0x6d, 0x32, 0xc6, 0x21,
	0x7e, 0x3d, 0xd7, 0x4a, 0x54, 0xc8, 0x7b, 0x04, 0xfa, 0x92, 0xdd, 0x03, 0xec, 0xec, 0x3b, 0xd6,
	0x5b, 0x51, 0xa1, 0xe1, 0x21, 0x91, 0x1d, 0x84, 0xdd, 0x42, 0xb4, 0x46, 0x75, 0xc0, 0x9a, 0xf7,
	0x89, 0x73, 0x15, 0x7b, 0x84, 0x30, 0xdb, 0x3d, 0xf3, 0xc1, 0x2c, 0x98, 0x8f, 0x96, 0x93, 0xb4,
	0x11, 0x97, 0x7a, 0x71, 0x69, 0xe1, 0xc5, 0xe5, 0x97, 0x36, 0xf6, 0x00, 0xf1, 0x4a, 0x9f, 0x95,
	0xad, 0x3f, 0x78, 0x44, 0x3f, 0x6e, 0xd2, 0xc6, 0x56, 0xea, 0xe0, 0xdc, 0xf3, 0xec, 0x0e, 0x86,
	0xee, 0xb9, 0xc9, 0x78, 0x4c, 0x3b, 0x5b, 0x20, 0x59, 0x43, 0x58, 0x88, 0xf2, 0x97, 0x3f, 0x06,
	0xfd, 0x6d, 0x6b, 0x8e, 0xde, 0xed, 0x20, 0x49, 0xc6, 0xc2, 0x76, 0x90, 0x44, 0x93, 0x7c, 0x05,
	0x57, 0x49, 0xff, 0x9f, 0xa6, 0xac, 0x54, 0xa8, 0xac, 0x3b, 0x53, 0x0b, 0x90, 0x3f, 0x71, 0x92,
	0x56, 0x1c, 0xe9, 0x4c, 0x5d, 0x7f, 0x0d, 0x9c, 0x7b, 0xfe, 0x12, 0x85, 0x4b, 0x89, 0x0f, 0x48,
	0xd4, 0x35, 0xb4, 0x29, 0xf4, 0x0b, 0x51, 0x1a, 0x1e, 0xcd, 0xc2, 0xf9, 0x68, 0x39, 0xf2, 0x13,
	0x0a, 0x51, 0xe6, 0x44, 0x24, 0x2f, 0xd7, 0x2d, 0x7f, 0x05, 0xec, 0x05, 0xb8, 0x80, 0xbb, 0xfb,
	0xdc, 0xe9, 0x43, 0xc7, 0x34, 0xe5, 0x3e, 0xa2, 0xb4, 0x9e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x22, 0x80, 0x0e, 0x96, 0x72, 0x02, 0x00, 0x00,
}
